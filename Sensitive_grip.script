Sensor_size = [5,5] #dimension of the sensor matrix
Sensor_num = Sensor_size[0]*Sensor_size[1]





def touched(sensor_values):
    i=0
    while(i<Sensor_num):
        if(values[i]>200): #adjut the value according to the object, the softer it is the less the value should be. (minimum 120)
            return True
        end
        i = i + 1
    end
    return False
end
  
  def receive_sensor_values():
    
    sensor_values = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]
    
    #read Modbus signals and store them in the array
    i = 0
    while(i<length(sensor_values)):
        signal_name = "output_" + to_str(i + 1)
        value = modbus_get_signal_status(signal_name, False)
        sensor_values[i] = value
        i = i + 1
    end
    
    return sensor_values
    
  end   
 

  def sensitive_grip():
    
    # establish Modbus com
    modbus_ip = "194.94.86.20"
    slave_id = 255
    base_address = 100  # Starting address for the first register
    signal_type = 2  # Register input
    sensor_num = 25
    # Define the list to store sensor values
    sensor_values = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]
    
    #add modbus signal
    i = 0
    while(i<length(sensor_values)):
      signal_name = "output_" + to_str(i + 1)
      modbus_add_signal(modbus_ip, slave_id, base_address + i, signal_type, signal_name)
      modbus_set_signal_update_frequency(signal_name,10)
      i = i + 1
    end
    
  
  
    rq_activate_and_wait() #activate the gripper
    rq_set_speed_norm_multi_grippers(20.0) #set gripper motion speed 
    rq_set_force_norm_multi_grippers(5.0)  #set gripping force
    rq_move_norm_multi_grippers(100)    #close the gripper
    #check if the sensor is touched
    while(not touched(sensor_values)):
        
        sensor_values = receive_sensor_values() #upgrade sensor reading

        if(rq_current_pos_norm()>90):  #stop if the gripper is fully closed
            break
        end
    end
    rq_move_and_wait_norm_multi_grippers(rq_current_pos_norm())  # stop the gripper
    textmsg("Sensor Values: ", sensor_values) #print the sensor values that ade the gripper stop
  
  end

  sensitive_grip()

  
